[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "usso"
version = "0.28.38"
description = "A plug-and-play client for integrating universal single sign-on (SSO) with Python frameworks, enabling secure and seamless authentication across microservices."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
license-files = ["LICENSE.txt"]
keywords = ["usso", "sso", "authentication", "security", "fastapi", "django"]
authors = [{ name = "Mahdi Kiani", email = "mahdikiany@gmail.com" }]
maintainers = [{ name = "Mahdi Kiani", email = "mahdikiany@gmail.com" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
  "pydantic>=2",
  "cryptography>=43.0.0",
  "cachetools",
  "singleton_package",
  "json-advanced",
  "httpx",
  "usso-jwt>=0.2.6",
]

[project.optional-dependencies]
fastapi = ["fastapi>=0.65.0", "uvicorn[standard]>=0.13.0"]
django = ["Django>=3.2"]
dev = ["check-manifest", "pytest", "pytest_asyncio"]
test = ["coverage"]
all = [
  "fastapi>=0.65.0",
  "uvicorn[standard]>=0.13.0",
  "Django>=3.2",
  "check-manifest",
  "pytest",
  "pytest_asyncio",
  "coverage",
]

[project.urls]
"Homepage" = "https://github.com/ussoio/usso-python"
"Bug Reports" = "https://github.com/ussoio/usso-python/issues"
"Funding" = "https://github.com/ussoio/usso-python"
"Say Thanks!" = "https://saythanks.io/to/mahdikiani"
"Source" = "https://github.com/ussoio/usso-python"

[project.scripts]
usso = "usso:main"

[tool.setuptools]
package-data = { "usso_jwt" = ["*.dat"] }

[tool.ruff]
line-length = 79
target-version = "py313"
fix = true
unsafe-fixes = true
preview = true

[tool.ruff.lint]
select = [
  "F",     # Pyflakes: critical errors and unused code
  "E",
  "W",     # PEP8: formatting issues
  "I",     # isort: import sorting
  "UP",    # pyupgrade: modern syntax
  "B",     # bugbear: potential bugs
  "T",     # debugger / print statement checks
  "C",     # complexity: complexity checking
  "A",     # avoids shadowing Python built-ins
  "ASYNC", # async/await syntax
  "SIM",   # simplify: cleaner code
  "PERF",  # performance optimizations
  "TRY",   # better try/excepts
  "N",     # naming conventions
  "S",     # security checks
  "ANN",   # type annotation checks
  "T20",   # no print()
  "C4",    # comprehension: better loops
  "COM",   # enforces trailing commas where needed.
  "EXE",   # executable: executable checking
  "ISC",   # implicit string concatenation
  "G",     # misuse of logging string interpolation
  # "D",     # docstrings: docstring checking
  "ERA", # remove commented code
  "RUF", # ruff-specific improvements
]
per-file-ignores = { "tests/*" = ["G004", "S101"], "server/db.py" = ["TRY"] }
ignore = ["TRY003", "COM812"]

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
check_untyped_defs = false
disallow_untyped_defs = false
